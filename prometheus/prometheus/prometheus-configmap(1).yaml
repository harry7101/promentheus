# Prometheus configuration format https://prometheus.io/docs/prometheus/latest/configuration/configuration/
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: EnsureExists
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      scrape_timeout: 30s
    rule_files:
    - /etc/config/rules.yml
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - job_name: kubernetes-apiservers
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: default;kubernetes;https
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: kubernetes-nodes-kubelet
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __metrics_path__
        replacement: /metrics/cadvisor
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name

    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name

    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: kube-system
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_k8s_app]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex:
          action: drop
  rules.yml: |
    groups:
    - name: k8s报警规则
      rules:
      - alert: node 内存使用报警
        expr: (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100 > 80
        for: 1m
        labels:
          severity: waning
          team: wechat
          node: "{{$labels.instance}}"
        annotations:
          summary: "内存报警"
          description: "内存使用率超过 80%,当前使用率{{ $value }}%"
          message: "内存使用率恢复正常值"
      - alert: Pod CPU使用率告警
        expr: (sum by(name)(rate(container_cpu_usage_seconds_total{image!=""}[5m]))*100) > 80
        for: 10m
        labels:
          severity: waning
          node: "{{$labels.instance}}"
          team: wechat
        annotations:
          description: "Pod {{ $labels.name }} CPU 资源利用率大于80% , 当前使用率{{ $value }}%"
          message: "Pod {{ $labels.name }} CPU 资源利用恢复正常值"
          summary: "CPU使用率告警"
      - alert: Pod 网络报警
        expr: sum by (name)(irate(container_network_receive_bytes_total{container_name="POD"}[1m])) > 1024*1024*50
        for: 10m
        labels:
          severity: waning
          team: wechat
        annotations:
          description: "Pod {{ $labels.pod }} network_receive 资源利用率大于 50M ,  当前值为{{ $value }})"
          message: "Pod {{ $labels.pod }} network_receive 资源利用率恢复"
          summary: "Pod网络告警"            
      - alert: node 磁盘空间使用报警
        expr: (node_filesystem_size_bytes{device="rootfs"} - node_filesystem_free_bytes{device="rootfs"}) / node_filesystem_size_bytes{device="rootfs"} * 100 > 80
        for: 2m
        labels:
          severity: waning
          team: wechat
          node: "{{$labels.instance}}"
        annotations:
          summary: "磁盘空间报警"
          description: "磁盘空间使用超过80%，当前空间使用率 {{ $value }}"
          message: "磁盘空间使用恢复到正常"
      - alert: Pod 不正常报警
        expr: kube_pod_status_phase{phase="Unknown"} == 1 or kube_pod_status_phase{phase="Failed"} == 1
        for: 5m
        labels:
          severity: error
          team: wechat
        annotations:
          summary: "Pod Down"
          description: "Pod {{ $labels.pod }} 挂了"
          message: "Pod {{ $labels.pod }} 恢复"
      - alert: Pod 重启报警
        expr: changes(kube_pod_container_status_restarts_total[10m]) > 0 
        for: 5m
        labels:
          severity: error
          team: wechat
        annotations:
          summary: Pod restart
          description: "{{ $labels.namespace }}下的Pod:{{ $labels.pod }} 重启了"
          message: "{{ $labels.namespace }}下的Pod:{{ $labels.pod }} 恢复了"
      - alert: node 不能调度报警
        expr: kube_node_spec_unschedulable == 1
        for: 5m
        labels:
          severity: error
          node: "{{$labels.instance}}"
        annotations:
          summary: "节点不能调度"
          description: "{{$labels.instance}}:节点不能调度"
          message: "{{$labels.instance}}:节点恢复"
      - alert: node 不正常报警
        expr: kube_node_status_condition{condition="Ready", status!="true"} == 1
        for: 5m
        labels:
          severity: error
          node: "{{ $labels.node }}"
        annotations:
          summary: Node Status Error
          description: "节点不可用"
          message: "节点恢复"
      - alert: Daemonset 不正常报警
        expr: kube_daemonset_status_number_unavailable > 0
        for: 5m
        labels:
          severity: error
          node: "{{$labels.instance}}"
        annotations:
          summary: "Daemonset Unavailable"
          description: "Daemonset 不可用"
          message: "Daemonset 恢复"
      #- alert: Job 失败报警
      #  expr: kube_job_status_failed == 1
      #  for: 5m
      #  labels:
      #    severity: error
      #  annotations:
      #    summary: "Job Failed"
      #    job: "{{ $labels.exported_job }}"

