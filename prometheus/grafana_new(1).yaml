apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: prom
data:
  grafana.ini: |
    [smtp]
    enabled = true
    host = smtp.qq.com:25
    user = 937275189@qq.com
    password = ohwlnftomuxnbfca
    skip_verify = true
    from_address = 937275189@qq.com
    [alerting]
    enabled = true
    execute_alerts = true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    name: monitoring-grafan
  name: mypvc
  namespace: kube-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  storageClassName: managed-nfs-storage
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: monitoring-grafana
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certificates
          readOnly: true
        - mountPath: /var/lib/grafana
          name: storage
        - mountPath: /etc/grafana
          name: config
        env:
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: daydayup
        - name: GF_SERVER_ROOT_URL
          value: /
        #- name: GF_INSTALL_PLUGINS
        #  value: grafana-kubernetes-app
      volumes:
      - name: ca-certificates
        hostPath:
          path: /etc/ssl/certs
      - name: config
        configMap:
          name: grafana-config
      - name: storage
        persistentVolumeClaim:
         claimName: mypvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
    # If you are NOT using this as an addon, you should comment out this line.
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-grafana
  name: monitoring-grafana
  namespace: kube-system
spec:
  # In a production setup, we recommend accessing Grafana through an external Loadbalancer
  # or through a public IP.
  # type: LoadBalancer
  # You could also use NodePort to expose the service at a randomly-generated port
  # type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    #nodePort: 3333
  selector:
    k8s-app: grafana
 # type: NodePort
